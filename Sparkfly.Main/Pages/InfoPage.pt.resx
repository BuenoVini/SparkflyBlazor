<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="about_1" xml:space="preserve">
    <value>Olá, meu nome é Vinícius, mas pode me chamar de Vini. Eu sou estudante de Ciências da Computação na UNESP de Rio Claro. Este aplicativo web é um projeto pessoal que criei para aprimorar minhas habilidades de C#.</value>
  </data>
  <data name="about_2" xml:space="preserve">
    <value>Quando comecei meu estágio em 2022, ouvi pessoas falando sobre o Blazor e como é fácil criar SPAs (Single Page Applications). A ideia por trás do Sparkfly era criar um serviço que resolvesse um problema comum que meus amigos da faculdade e do trabalho estavam tendo.</value>
  </data>
  <data name="about_3" xml:space="preserve">
    <value>Toda sexta-feira, quando vou para a faculdade, o motorista da van nos permite ouvir o Spotify. Por coincidência, todas as sextas-feiras no trabalho, também ouvimos música no escritório. O problema é que, se você quiser sugerir uma música para tocar, terá que perguntar ao dono da conta do Spotify quais músicas tocar em seguida. Foi aí que tive a ideia de criar o Sparkfly.</value>
  </data>
  <data name="about_4" xml:space="preserve">
    <value>Além disso, desde que decidi aprender C# em 2022, estava pensando em um projeto que eu pudesse construir para colocar minhas habilidades em prática. Aliado à minha paixão por ouvir música, fiquei muito empolgado para começar a fazer este aplicativo e ver meus amigos usando-o.</value>
  </data>
  <data name="about_5" xml:space="preserve">
    <value>Eu realmente espero que você goste e se divirta compartilhando suas músicas favoritas com seus amigos! Esse projeto foi feito com muitas noites sem dormir mas com muito amor, com certeza!</value>
  </data>
  <data name="about_6" xml:space="preserve">
    <value>Se você tiver um tempinho, eu ficaria muito feliz se você visitasse minhas redes sociais!</value>
  </data>
  <data name="about_7" xml:space="preserve">
    <value>Ah, e por que o nome é Sparkfly? Bem, você pode encontrar a resposta se souber onde procurar, mas não será eu quem lhe dirá onde. Boa sorte!</value>
  </data>
  <data name="github" xml:space="preserve">
    <value>No meu Github você pode conferir os projetos anteriores em que trabalhei. (Se clicar no ícone do GitHub no canto superior direito, será direcionado para o repositório do projeto)</value>
  </data>
  <data name="hello" xml:space="preserve">
    <value>Olá!</value>
  </data>
  <data name="lastfm" xml:space="preserve">
    <value>Por fim, você pode conferir o tipo de música que eu gosto de ouvir no meu perfil do Last.fm. Alerta de spoiler: tem muita Taylor Swift!</value>
  </data>
  <data name="linkedin" xml:space="preserve">
    <value>Se você gostou do Sparkfly, por favor me envie uma mensagem no LinkedIn contando sua opinião.</value>
  </data>
  <data name="page_title" xml:space="preserve">
    <value>Sobre o Sparkfly</value>
  </data>
  <data name="section_1" xml:space="preserve">
    <value>Um pouquinho sobre mim</value>
  </data>
  <data name="section_2" xml:space="preserve">
    <value>O problema em questão</value>
  </data>
  <data name="section_3" xml:space="preserve">
    <value>Agradecimentos e contato</value>
  </data>
  <data name="social_media" xml:space="preserve">
    <value>Minhas redes:</value>
  </data>
</root>