@page "/validate"
@page "/validate/{code}/{state}"
@*@page "/validate/{party-id}"*@

@using Sparkfly.Main.Services
@using Sparkfly.Main.Data

@inject SparkflyManager Sparkfly
@inject NavigationManager NavManager
@inject ProtectedSessionStorage ProtectedSession

@code {
    [Parameter]
    [SupplyParameterFromQuery(Name = "code")]
    public string? Code { get; set; }

    [Parameter]
    [SupplyParameterFromQuery(Name = "state")]
    public string? State { get; set; }

    //[Parameter]
    //[SupplyParameterFromQuery(Name = "party-id")]
    public string? PartyId { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            if (PartyId is not null)
            {
                // TODO: connect to group
            }
            else if (Code is not null && State is not null)
            {
                await Sparkfly.SpotifyRequestTokensAsync(Code, (await ProtectedSession.GetAsync<string>("state")).Value ?? string.Empty, State);
                await ProtectedSession.DeleteAsync("state");

                NavManager.NavigateTo("/party");
            }

            await ProtectedSession.SetAsync("this_client", new Client(Guid.NewGuid().ToString(), null));

            Sparkfly.StartTimer();
        }
    }
}
